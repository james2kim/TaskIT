{"version":3,"sources":["components/Account/Account.module.css","components/Account/DeleteAccount/DeleteAccount.module.css","components/Application/UpdateTask/UpdateTask.module.css","components/Home/Home.module.css","components/Account/UpdateAccount/UpdateAccount.module.css","components/Navbar/Navbar.module.css","components/Auth/Login/Login.module.css","components/Auth/Signup/Signup.module.css","components/Account/DeleteAccount/Backdrop/Backdrop.module.css","components/Application/NewTask/NewTask.module.css","components/Navbar/Navbar.js","components/Home/Home.js","components/Auth/Login/Login.js","components/Auth/Signup/Signup.js","components/Application/Application.js","components/Account/DeleteAccount/Backdrop/Backdrop.js","components/Account/DeleteAccount/DeleteAccount.js","components/Account/Account.js","components/Account/UpdateAccount/UpdateAccount.js","components/Application/NewTask/NewTask.js","components/Application/UpdateTask/UpdateTask.js","containers/TaskManager.js","App.js","index.js","components/Application/Application.module.css"],"names":["module","exports","Toolbar","props","navbar","isAuth","to","exact","activeClassName","activeStyle","color","onClick","logoutUserHandler","className","styles","Navbar","Home","Content","icon","history","push","Login","handleSubmit","event","a","preventDefault","axios","post","email","emailValue","password","passwordValue","response","setIsAuth","setUserToken","data","token","status","alert","setError","onSubmit","value","type","name","placeholder","onChange","handleEmailChange","handlePasswordChange","error","Signup","length","nameValue","handleNameChange","Application","useState","loading","setLoading","useEffect","method","url","headers","Authorization","userToken","completedTasks","incompleteTasks","JSON","stringify","allCompletedTasks","setAllCompletedTasks","allIncompleteTasks","setAllIncompleteTasks","readTasksHandler","convertPriority","priority","deleteTaskHandler","_id","author","request","console","log","readTaskHandler","setCurTaskPriority","setCurTaskDesc","description","setCurTaskComplete","completed","setCurTaskID","Container","TopCorner","TaskHeader","map","task","index","key","Task","style","backgroundColor","Trash","Update","Date","updatedAt","toLocaleDateString","undefined","weekday","year","month","day","Edit","backdrop","showModal","Backdrop","clicked","DeleteAccount","hideModalHandler","deleteAccountHandler","transform","opacity","ButtonSpacing","DeleteButton","RevertButton","Account","readProfileHandler","showModalHandler","authUserName","authUserEmail","authUserPassword","authUserUpdateAt","AccountContainer","Data","Information","UpdatedAt","UpdateButton","updateAccountHandler","Axios","setAuthUserEmail","setAuthUserName","UpdateAccount","Cursor","NewTask","newTaskHandler","newTaskValue","newTaskPriority","newTaskCompleted","setNewTaskValue","setNewTaskPriority","setNewTaskCompleted","required","handleNewTaskChange","handleNewPriorityChange","handleNewCompletedChange","UpdateTask","completeJSX","updateTaskHandler","curTaskID","curTaskDesc","curTaskPriority","curTaskComplete","handleUpdateCompletedChange","handleUpdateTaskChange","handleUpdatePriorityChange","TaskManager","setEmailValue","setPasswordValue","setNameValue","setAuthUserUpdateAt","setAuthUserPassword","setShowModal","performance","navigation","TYPE_RELOAD","window","location","href","origin","target","routes","path","render","component","App","library","add","fab","fas","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7da4a4c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountContainer\":\"Account_AccountContainer__2QkR7\",\"Account\":\"Account_Account__1-c3f\",\"Data\":\"Account_Data__1akPb\",\"Information\":\"Account_Information__2ci1L\",\"ButtonSpacing\":\"Account_ButtonSpacing__3VhnU\",\"UpdateButton\":\"Account_UpdateButton__2YhGn\",\"UpdatedAt\":\"Account_UpdatedAt__2tJd2\",\"DeleteButton\":\"Account_DeleteButton__35N7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeleteAccount\":\"DeleteAccount_DeleteAccount__2tgY-\",\"DeleteButton\":\"DeleteAccount_DeleteButton__2Y1b0\",\"RevertButton\":\"DeleteAccount_RevertButton__10WC9\",\"ButtonSpacing\":\"DeleteAccount_ButtonSpacing__1IsW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UpdateTask\":\"UpdateTask_UpdateTask__2ltac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__Hrybx\",\"Content\":\"Home_Content__2vZXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UpdateAccount\":\"UpdateAccount_UpdateAccount__3fBF-\",\"Cursor\":\"UpdateAccount_Cursor__3weTn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__1IxrI\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__37Wv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signup\":\"Signup_Signup__3sJ6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__zOM7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewTask\":\"NewTask_NewTask__2eFnm\"};","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport styles from './Navbar.module.css'\n\n\nconst Toolbar = (props) => {\n    let navbar\n    if (props.isAuth) \n        {\n          navbar = <ul>\n                        <li><NavLink \n                                to=\"/account\" \n                                exact\n                                activeClassName=\"my-active\"\n                                activeStyle={{\n                                    color:'#fa923f'\n                                }}>Account</NavLink></li>\n                        <li><NavLink \n                                to=\"/application\" \n                                exact\n                                activeClassName=\"my-active\"\n                                activeStyle={{\n                                    color:'#fa923f'\n                                }}>Application</NavLink></li>\n\n                         <li onClick={props.logoutUserHandler}><NavLink \n                                to=\"/login\"\n                                activeClassName=\"my-active\"\n                                activeStyle={{\n                                    color:'#fa923f'\n                                }} >Logout </NavLink></li>                \n                    </ul>\n\n        } \n    else \n        {\n            navbar = <ul>\n                <li><NavLink \n                    to=\"/\"\n                    exact\n                    activeClassName=\"my-active\"\n                    activeStyle={{\n                        color:'#fa923f'\n                }}>Home</NavLink></li>  \n\n                <li><NavLink \n                    to=\"/login\"\n                    activeClassName=\"my-active\"\n                    activeStyle={{\n                        color:'#fa923f'\n                }}>Login</NavLink></li>  \n\n                <li><NavLink \n                    to=\"/signup\"\n                    activeClassName=\"my-active\"\n                    activeStyle={{\n                        color:'#fa923f'\n                }}>Signup</NavLink></li>  \n            </ul>\n        }\n\n\n    return (\n        <div className={styles.Navbar}>    \n            <header>\n                <nav>\n                    {navbar}\n                </nav>\n            </header>\n\n        </div>\n    )\n}\n\nexport default Toolbar","import React from 'react'\nimport styles from './Home.module.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Home = (props) => {\n    const routeToSignup = () => {\n        props.history.push('/signup')\n    }\n    return (\n        <div className={styles.Home}>\n            <div className={styles.Content}>\n                <h1>TaskIT</h1>\n                <h3>Premium Task Manager</h3>\n                <p>Prioritize your tasks more efficiently <FontAwesomeIcon icon={['fas', 'check']} /></p>\n                <hr />\n                <button onClick={routeToSignup}>Signup</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\nimport axios from 'axios'\nimport styles from './Login.module.css'\n\n\nconst Login = (props) => {\n\n    // Login Request Function to Authenticate Existing Users\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        try {\n            const response = await axios.post('/users/login', {\n                email: props.emailValue,\n                password: props.passwordValue\n            })\n        \n            props.setIsAuth(true)\n            props.setUserToken(response.data.token)\n\n              if (response.status === 200) {\n                  props.history.push('/application')\n              } else {\n                  alert('Unable to Login')\n              }\n        } catch (err) {\n            props.setError('Invalid Credentials. Unable to Login.')\n        }\n    }\n\n\n        const redirectToLogin = () => {\n            props.history.push('/signup')\n        }\n\n        return (\n                <div className={styles.Login}>\n                    <h1>Login</h1>\n                    <form onSubmit={handleSubmit}>\n                        <input value={props.emailValue} type=\"email\" name=\"email\" placeholder=\"Email\" onChange={props.handleEmailChange} />\n                        <input value={props.passwordValue} type=\"password\" name=\"password\" placeholder=\"Password\" onChange={props.handlePasswordChange}/>\n                        <button>Login</button>\n                        <p onClick={redirectToLogin}>Not Registered? Sign up here.</p>\n                    </form>\n                    {props.error}\n                </div>\n        )\n}\n\nexport default Login","import React from 'react'\nimport axios from 'axios'\nimport styles from './Signup.module.css'\n\nconst Signup = (props) => {\n    \n    // Signup function to add new user to database, and authenticates\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n\n        if (props.passwordValue.length < 7) {\n            return props.setError('Password must be a minimum of 7 characters')\n        }\n\n        try {\n            const response = await axios.post('/users', {\n                name: props.nameValue,\n                email: props.emailValue,\n                password:props.passwordValue\n            })\n\n            props.setIsAuth(true)\n            props.setUserToken(response.data.token)    \n    \n            if (response.status === 201) {\n                props.history.push('/application')\n            } else {\n               alert('Unable to Signup')\n            }\n        } catch(err) {\n            props.setError('Email is in use. Try another email.')\n        }\n    }\n\n    const redirectToLogin = () => {\n        props.history.push('/login')\n    }\n\n    return (\n            <div className={styles.Signup}>\n                <h1>Signup</h1>\n                <form onSubmit={handleSubmit}>\n                    <input value={props.nameValue}type=\"text\" name=\"name\" placeholder=\"Name\" onChange={props.handleNameChange}/>\n                    <input value={props.emailValue} type=\"email\" name=\"email\" placeholder=\"Email\" onChange={props.handleEmailChange} />\n                    <input value={props.passwordValue} type=\"password\" name=\"password\" placeholder=\"Password\" onChange={props.handlePasswordChange}/>\n                    <button>Sign Up</button>\n                    <p onClick={redirectToLogin}>Already Signed Up? Login here.</p>\n                </form>\n                {props.error}\n            </div>\n    )\n}\n\nexport default Signup","import React, {useState,useEffect} from 'react'\n// import ReactDOM from 'react-dom'\nimport axios from 'axios'\nimport styles from './Application.module.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nconst Application = (props) => {\n   \n    // Loading state to minimize memory leaks from changing state on an unmounted component \n    const [loading, setLoading] = useState('initial')\n\n\n    useEffect(() => {\n        setLoading('true')\n        // Read Task function to retrieve tasks from database \n        const readTasksHandler = async () => {\n            try {\n                const completedTasks = await axios({\n                    method:'get',\n                    url:'/tasks?completed=true&&sort=updatedAt:desc',\n                    headers: {\n                        Authorization: `Bearer ${props.userToken}`\n                    }\n                })\n                \n                const incompleteTasks = await axios({\n                    method:'get',\n                    url:'/tasks?completed=false&&limit=5&&sort=priority:asc',\n                    headers: {\n                        Authorization: `Bearer ${props.userToken}`\n                    }\n                })\n    \n                //  Memoization like technique to reduce changes in State when no tasks have been added, removed or changed \n\n                if (JSON.stringify(completedTasks.data) !== JSON.stringify(props.allCompletedTasks)) {\n                    props.setAllCompletedTasks(completedTasks.data)\n                } \n           \n                if (JSON.stringify(incompleteTasks.data) !== JSON.stringify(props.allIncompleteTasks)) {\n                    props.setAllIncompleteTasks(incompleteTasks.data)\n                }\n                setLoading('false')\n            } catch (err) {\n                alert('Unable To Retrieve Tasks')\n            }\n        }\n        readTasksHandler()\n    }, [props])\n\n\n    //  To minimize memory leaks from asynchronous call to Express API on unmounted component \n    if (loading === 'initial') {\n        return <h2>Initializing</h2>\n    }\n\n    if (loading === 'true') {\n        return <h2>Loading....</h2>\n    }\n\n    // Helper functions for Application UI\n    const convertPriority = priority => {\n        if (priority === 1) {\n            return 'Critical'\n        } else if (priority === 2) {\n            return 'Moderate'\n        } else {\n            return 'Mild'\n        }\n    }\n\n    const stylePriorityBackground = priority => {\n        if (priority === 1) {\n            return '#DC143C'\n        } else if (priority === 2) {\n            return '#FF8C00'\n        } else {\n            return '#F4A460'\n        }\n    }\n\n    //  Delete Task function to delete task from database, and ultimately the UI\n\n    const deleteTaskHandler = async (_id, author) => {\n        try {\n            const request = await axios({\n                method:'delete',\n                url: `/tasks/${_id}`,\n                headers: {\n                    Authorization: `Bearer ${props.userToken}`\n                },\n                data: {\n                    _id,\n                    author\n                }\n            })\n            console.log(request)\n            props.history.push('/application')\n          \n        } catch (err) {\n            console.log('Unable to Delete Task')\n        }\n    }\n\n\n    // Read Task function to get information (id, author, etc) on a specific task, primarily as helper function to the Update Task function \n    const readTaskHandler = async (_id, author) => {\n        props.history.push('/application/update')\n        props.setLoading('true')\n        try {\n            const request = await axios({\n                method:'get',\n                url: `/tasks/${_id}`,\n                headers: {\n                    Authorization: `Bearer ${props.userToken}`\n                },\n                data: {\n                    _id,\n                    author\n                }\n            })\n            \n            props.setCurTaskPriority(request.data.priority)\n            props.setCurTaskDesc(request.data.description)\n            props.setCurTaskComplete(request.data.completed)\n            props.setCurTaskID(request.data._id)\n            props.setLoading('false')\n          \n        } catch (err) {\n            console.log('Unable to Read Task')\n        }\n    }\n\n\n    // Application page compartmentalizes between finished and unfinished tasks \n\n    return (\n        <div className={styles.Container}>\n            <div>\n                <button className={styles.TopCorner} onClick={() => props.history.push('/application/new')}>New Task <FontAwesomeIcon icon={['fas', 'plus-circle']} /></button>\n            </div>\n            <div className={styles.Application}>\n                <div>\n                    <h3 className={styles.TaskHeader}>Unfinished Tasks</h3>\n                    { props.allIncompleteTasks ? props.allIncompleteTasks.map((task, index) => {\n                    return <div key={task._id} \n                                className={styles.Task} \n                                style={{backgroundColor: stylePriorityBackground(task.priority), color:'white' }}>\n                                <p \n                                    className={styles.Trash}\n                                    onClick={() => deleteTaskHandler(task._id, task.author)} ><FontAwesomeIcon icon={['fas', 'trash']} /></p>\n                                <p>{task.description}</p>\n                                <p>Priority: {convertPriority(task.priority)}</p>\n                                <p className={styles.Update}>Last Updated: {new Date(task.updatedAt).toLocaleDateString(undefined, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'})}</p>\n                                <p \n                                    className={styles.Edit}\n                                    onClick={() => readTaskHandler(task._id, task.author)}><FontAwesomeIcon icon={['fas', 'pen']} /></p>\n                            </div> })  : null  } \n                </div>\n                <div>\n                    <h3 className={styles.TaskHeader}>Completed Tasks</h3>\n                    { props.allCompletedTasks ? props.allCompletedTasks.map((task, index) => {\n                    return <div key={task._id} \n                                className={styles.Task} \n                                style={{backgroundColor:'#7CFC00'}}>\n                                <p \n                                    className={styles.Trash} \n                                    onClick={() => deleteTaskHandler(task._id, task.author)} ><FontAwesomeIcon icon={['fas', 'trash']} /></p>\n                                <p>{task.description}</p>\n                                <p>Priority: {convertPriority(task.priority)}</p>\n                                <p className={styles.Update}> Last Updated: {new Date(task.updatedAt).toLocaleDateString(undefined, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'})}</p>\n                                <p \n                                    className={styles.Edit}\n                                    onClick={() => readTaskHandler(task._id, task.author)}><FontAwesomeIcon icon={['fas', 'pen']} /></p>\n                            </div> }) : null} \n                </div>\n            </div>\n        </div>\n\n    )\n}\nexport default Application","import React from 'react'\n\nimport styles from './Backdrop.module.css'\nconst backdrop = (props) => (\n    props.showModal ? <div className={styles.Backdrop} onClick={props.clicked}></div> : null\n)\n\nexport default backdrop","import React from 'react'\nimport axios from 'axios'\n\nimport styles from './DeleteAccount.module.css'\nimport Backdrop from './Backdrop/Backdrop'\n\nconst DeleteAccount = (props) => {\n\n    const {showModal,\n        hideModalHandler, \n        userToken} = props\n\n\n    const deleteAccountHandler = async (event) => {\n        try {\n            await axios({\n                method:'delete',\n                url:'http://localhost:3001/users/me',\n                headers: {\n                    Authorization: `Bearer ${userToken}`\n                }\n            })\n           \n            props.history.push('/')\n        } catch (err) {\n            console.log('Not able to delete')\n        }\n    }\n\n    return (\n        <div>\n            <Backdrop showModal={showModal} clicked={hideModalHandler} />\n            <div\n                className={styles.DeleteAccount}\n                style={{\n                    transform: showModal ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: showModal ? '1' : '0'\n                }}>\n                    <h4>Delete Account?</h4>\n                    <p>Deleting an account is permanent. Do you still want to proceed?</p>\n                    <div className={styles.ButtonSpacing}>\n                    <form onSubmit={deleteAccountHandler}>\n                            <button className={styles.DeleteButton}>Yes</button>\n                    </form>\n                    <button className={styles.RevertButton} onClick={hideModalHandler}>No</button>\n                    </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DeleteAccount","import React, {useEffect} from 'react'\nimport styles from './Account.module.css'\nimport DeleteAccount from './DeleteAccount/DeleteAccount'\n\nconst Account = (props) => {\n\n    const {readProfileHandler, \n        showModal, \n        showModalHandler, \n        hideModalHandler, \n        userToken, \n        authUserName,\n        authUserEmail,\n        authUserPassword,\n        authUserUpdateAt} = props\n\n    useEffect(() => {\n        readProfileHandler()\n    }, [readProfileHandler])\n\n    return (\n        <div className={styles.AccountContainer}>     \n            <DeleteAccount\n                {...props}\n                showModal={showModal}\n                hideModalHandler={hideModalHandler}\n                userToken={userToken} />\n            <div className={styles.Account}>\n                <h1>Account Information</h1>\n                <div className={styles.Data}>\n                    <p className={styles.Information}><strong>Name:</strong> {authUserName}</p>\n                    <p className={styles.Information}><strong>Email:   </strong> {authUserEmail}</p>\n                    <p className={styles.Information}><strong>Password:   </strong> {authUserPassword}</p>\n                    <p className={styles.UpdatedAt}>Last Updated {authUserUpdateAt} </p>\n                </div>\n                <div className={styles.ButtonSpacing}>\n                    <button onClick={() => props.history.push('/account/update')} className={styles.UpdateButton}>Update Account Info</button>\n                    <button onClick={showModalHandler} className={styles.DeleteButton}>Delete Account</button>\n                </div>\n            </div>        \n        </div>\n    )\n}\n\nexport default Account","import React from 'react'\n\nimport styles from './UpdateAccount.module.css'\nimport Axios from 'axios'\n\nconst Account = (props) => {\n\n    const redirectToLogin = () => {\n        props.history.push('/account')\n    }\n\n    const updateAccountHandler = async (event) => {\n        event.preventDefault()\n        try {\n                await Axios({\n                method:'patch',\n                url:'http://localhost:3001/users/me',\n                headers: {\n                    Authorization: `Bearer ${props.userToken}`\n                },\n                data: {\n                    name: props.nameValue,\n                    email:props.emailValue,\n                    password:props.passwordValue\n                }\n            })\n            props.setAuthUserEmail(props.emailValue)\n            props.setAuthUserName(props.nameValue)\n            props.history.push('/account')\n        } catch (err) {\n           console.log('Unable to update account.')\n        }\n    }\n\n    return (\n        <div className={styles.UpdateAccount}>\n            <h1>Update Account</h1>\n            <p>Update One, Two, or All Fields </p>\n                <form onSubmit={updateAccountHandler}>\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={props.handleNameChange}/>   \n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={props.handleEmailChange} />\n                    <input type=\"password\" name=\"password\" placeholder=\"Password must be 7 characters min\" onChange={props.handlePasswordChange}/>\n                    <button>Update Information</button>\n                    <p className={styles.Cursor} onClick={redirectToLogin}>Nothing to Update.</p>\n                </form>\n                {props.error}\n        </div>\n    )\n}\n\nexport default Account","import React from 'react'\nimport axios from 'axios'\n\nimport styles from './NewTask.module.css'\n\nconst NewTask = (props) => {\n\n    // Adding New Task function to add new task to database\n    const newTaskHandler = async (event) => {\n        event.preventDefault()\n        try {\n            await axios({\n                method:'post',\n                url:'/tasks',\n                headers: {\n                    Authorization: `Bearer ${props.userToken}`\n                },\n                data: {\n                    description: props.newTaskValue,\n                    priority: props.newTaskPriority,\n                    completed:props.newTaskCompleted\n                }\n            })\n            props.setNewTaskValue('')\n            props.setNewTaskPriority('')\n            props.setNewTaskCompleted(false)\n            props.history.push('/application')\n        } catch (err) {\n            console.log('Unable to Create Task')\n        }\n    }\n\n\n    return (\n        <div className={styles.NewTask}>\n            <h1>New Task</h1>\n            <form onSubmit={newTaskHandler}>\n                <input required value={props.newTaskValue} type=\"text\" name=\"description\" placeholder=\"Write a Task Description\" onChange={props.handleNewTaskChange} />\n                <select name=\"priority\" value={props.newTaskPriority} required onChange={props.handleNewPriorityChange}>\n                    <option value=''>Choose Priority:</option>\n                    <option value={1}>Critical Importance</option>\n                    <option value={2}>Important</option>\n                    <option value={3}>Mildly Important</option>\n                </select>\n                <select name=\"completed\" value={props.newTaskCompleted} onChange={props.handleNewCompletedChange}>\n                    <option value='' style={{color:'#ccc'}}>Optional: Task Completed?</option>\n                    <option value={false}>No</option>\n                    <option value={true}>Yes</option>\n                </select>\n                <button>Create</button>\n                \n            </form>\n            <p onClick={() => props.history.push('/application')}>Back to Application.</p>\n        </div>\n    )\n}\n\nexport default NewTask","import React  from 'react'\nimport axios from 'axios'\n\nimport styles from './UpdateTask.module.css'\n\nconst UpdateTask = props => {\n\n    // Updates information about specific task \n    const updateTaskHandler = async (event) => {\n        event.preventDefault()\n        await axios({\n            method:'patch',\n            url:`/tasks/${props.curTaskID}`,\n            headers: {\n                Authorization: `Bearer ${props.userToken}`\n            },\n            data: {\n                description: props.curTaskDesc,\n                priority: props.curTaskPriority,\n                completed: props.curTaskComplete\n            }\n        })\n        props.history.push('/application')\n    }\n\n\n    if (props.loading === 'initial') {\n        return <h2 className={styles.UpdateTask}>Initializing</h2>\n    }\n\n    if (props.loading === 'true') {\n        return <h2 className={styles.UpdateTask}>Loading....</h2>\n    } \n\n    let completeJSX\n    if (props.curTaskComplete) {\n        completeJSX = <select name=\"completed\" value={props.curTaskComplete} onChange={props.handleUpdateCompletedChange}>\n                <option value={true}>Complete</option>\n                <option value={false}>Incomplete</option>\n              </select>\n    } else {\n        completeJSX = <select name=\"completed\" value={props.curTaskComplete} onChange={props.handleUpdateCompletedChange}>\n                <option value={false}>Incomplete</option>\n                <option value={true}>Complete</option>\n              </select>\n    }\n\n    return (\n        <div className={styles.UpdateTask}>\n            <h1>Update Task</h1>\n            <form onSubmit={updateTaskHandler}>\n                <input value={props.curTaskDesc} type=\"text\" name=\"description\" onChange={props.handleUpdateTaskChange}/>\n                <select name=\"priority\" value={props.curTaskPriority} onChange={props.handleUpdatePriorityChange}>\n                    <option value={1}>Critical Importance</option>\n                    <option value={2}>Important</option>\n                    <option value={3}>Mildly Important</option>\n                </select>\n                {completeJSX}\n                <button>Update Task</button>\n            </form>\n            <p onClick={() => props.history.push('/application')}>Back to Application.</p>\n        </div>\n    )\n}\n\nexport default UpdateTask","import React, {useState, useEffect} from 'react'\nimport {Route, Switch, Redirect} from 'react-router-dom'\nimport axios from 'axios'\nimport Toolbar from '../components/Navbar/Navbar'\nimport Home from '../components/Home/Home'\nimport Login from '../components/Auth/Login/Login'\nimport Signup from '../components/Auth/Signup/Signup'\nimport Application from '../components/Application/Application'\nimport Account from '../components/Account/Account'\nimport UpdateAccount from '../components/Account/UpdateAccount/UpdateAccount'\nimport NewTask from '../components/Application/NewTask/NewTask'\nimport UpdateTask from '../components/Application/UpdateTask/UpdateTask'\n\nconst TaskManager = (props) => {\n\n    // Authentication Related State\n    const [isAuth, setIsAuth] = useState(false)\n    const [error, setError] = useState('')\n    const [userToken, setUserToken] = useState('')\n\n    // Login/Signup Related State \n    const [emailValue, setEmailValue] = useState('')\n    const [passwordValue, setPasswordValue] = useState('')\n    const [nameValue, setNameValue] = useState('')\n\n    // Account Related State\n    const [authUserName, setAuthUserName] = useState('')\n    const [authUserEmail, setAuthUserEmail] = useState('')\n    const [authUserUpdateAt, setAuthUserUpdateAt] = useState('')\n    const [authUserPassword, setAuthUserPassword] = useState('')\n\n    // Modal Related State\n    const [showModal, setShowModal] = useState(false)\n    const [loading, setLoading] = useState('initial')\n\n    // New Task Related State\n    const [newTaskValue, setNewTaskValue] = useState('')\n    const [newTaskPriority, setNewTaskPriority] = useState('')\n    const [newTaskCompleted, setNewTaskCompleted] = useState(false)\n\n    // Tasks Related State\n    const [allCompletedTasks, setAllCompletedTasks] = useState(false)\n    const [allIncompleteTasks, setAllIncompleteTasks] = useState(false)\n\n    // Update Task Related State\n    const [curTaskDesc, setCurTaskDesc] = useState('')\n    const [curTaskPriority, setCurTaskPriority] = useState('')\n    const [curTaskComplete, setCurTaskComplete] = useState('')\n    const [curTaskID, setCurTaskID] = useState('')\n   \n\n    useEffect(() => {\n        if (performance.navigation.type === performance.navigation.TYPE_RELOAD) {\n          window.location.href = window.location.origin\n        }\n        \n        }, [])\n\n\n    // User Information Handlers \n\n\n    const handleNameChange = (event) => {\n        setNameValue(event.target.value)\n    }\n\n    const handleEmailChange = (event) => {\n        setEmailValue(event.target.value)\n    }\n\n    const handlePasswordChange = (event) => {\n        setPasswordValue(event.target.value)\n    }\n\n// Task Handlers\n\n    const handleNewTaskChange = event => {\n        setNewTaskValue(event.target.value)\n    }\n\n    const handleNewPriorityChange = event => {\n        setNewTaskPriority(+event.target.value)\n    }\n\n    const handleNewCompletedChange = event => {\n        setNewTaskCompleted(event.target.value === 'true')\n    }\n\n    const handleUpdateTaskChange = event => {\n        setCurTaskDesc(event.target.value)\n    }\n\n    const handleUpdatePriorityChange = event => {\n        setCurTaskPriority(+event.target.value)\n    }\n\n    const handleUpdateCompletedChange = event => {\n        setCurTaskComplete(event.target.value === 'true')\n    }\n\n    // Modal Related Handlers\n\n    const showModalHandler = () => {\n        setShowModal(true)\n    }\n\n    const hideModalHandler = () => {\n        setShowModal(false)\n    }\n \n    // Logout Handler Function \n    const logoutUserHandler = async () => {\n        try {\n            const response = await axios({\n                method:'post',\n                url:'/users/logout',\n                headers: {\n                    Authorization: `Bearer ${userToken}`\n                }\n            })\n            console.log(response.status)\n            setIsAuth(false)\n            setUserToken('')\n            setEmailValue('')\n            setPasswordValue('')\n            setNameValue('')\n            setAuthUserName('')\n            setAuthUserEmail('')\n            setAuthUserPassword('')\n            setAuthUserUpdateAt('')\n\n        } catch (err) {\n            console.log('Something Went Wrong')\n        }\n    }\n\n    // Read User Profile Function\n\n    const readProfileHandler = async () => {\n        try {\n            const response = await axios({\n                method:'get',\n                url:'/users/me',\n                headers: {\n                    Authorization: `Bearer ${userToken}`\n                }\n            })\n\n            setAuthUserName(response.data.name)\n            setAuthUserEmail(response.data.email)\n            setAuthUserUpdateAt(new Date(response.data.updatedAt).toLocaleDateString(undefined, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'}))\n            setAuthUserPassword('*******')\n        } catch (err) {\n            alert('Something Went Wrong.')\n        }\n    }\n\n    let routes = (\n        <Switch>\n            <Route path=\"/login\" render={(props) => \n                <Login \n                    {...props}\n                    setIsAuth={setIsAuth} \n                    passwordValue={passwordValue}\n                    emailValue={emailValue}\n                    handleEmailChange={handleEmailChange}\n                    handlePasswordChange={handlePasswordChange}\n                    error={error} \n                    setError={setError} \n                    setUserToken={setUserToken}/>} />\n            <Route path=\"/signup\" render={(props) => \n                <Signup \n                    {...props}\n                    setIsAuth={setIsAuth} \n                    nameValue={nameValue}\n                    emailValue={emailValue}\n                    passwordValue={passwordValue}\n                    handleNameChange={handleNameChange}\n                    handleEmailChange={handleEmailChange}\n                    handlePasswordChange={handlePasswordChange}\n                    error={error} \n                    setError={setError}\n                    setUserToken={setUserToken}/> }/>\n             <Route path=\"/\" component={Home} />\n             <Redirect to=\"/\" />\n        </Switch>\n    )\n\n    if (isAuth) {\n        routes = (\n            <Switch>\n            <Route path=\"/application/update\" render={(props) => \n                 <UpdateTask \n                     {...props}\n                     loading={loading}\n                     setLoading={setLoading}\n                     userToken={userToken}\n                     curTaskPriority={curTaskPriority}\n                     curTaskDesc={curTaskDesc}\n                     curTaskComplete={curTaskComplete}\n                     curTaskID={curTaskID}\n                     handleUpdateTaskChange={handleUpdateTaskChange}\n                     handleUpdatePriorityChange={handleUpdatePriorityChange}\n                     handleUpdateCompletedChange={handleUpdateCompletedChange}/>\n             }/>  \n            <Route path=\"/application/new\" render={(props) => \n                 <NewTask\n                     {...props}\n                     newTaskValue={newTaskValue}\n                     handleNewTaskChange={handleNewTaskChange}\n                     newTaskPriority={newTaskPriority}\n                     handleNewPriorityChange={handleNewPriorityChange}\n                     newTaskCompleted={newTaskCompleted}\n                     handleNewCompletedChange={handleNewCompletedChange}\n                     userToken={userToken} \n                     setNewTaskValue={setNewTaskValue}\n                     setNewTaskPriority={setNewTaskPriority}\n                     setNewTaskCompleted={setNewTaskCompleted}/>\n             }/> \n             <Route path=\"/application\"  render={(props) => \n                 <Application \n                     {...props}  \n                     allCompletedTasks={allCompletedTasks}\n                     setAllCompletedTasks={setAllCompletedTasks}\n                     allIncompleteTasks={allIncompleteTasks}\n                     userToken={userToken}\n                     setAllIncompleteTasks={setAllIncompleteTasks}\n                     setLoading={setLoading}\n                     setCurTaskPriority={setCurTaskPriority}\n                     setCurTaskDesc={setCurTaskDesc}\n                     setCurTaskComplete={setCurTaskComplete}\n                     setCurTaskID={setCurTaskID}/>} />\n \n            <Route path=\"/account/update\" render={(props) => \n                 <UpdateAccount \n                     {...props}\n                     nameValue={nameValue}\n                     emailValue={emailValue}\n                     passwordValue={passwordValue}\n                     userToken={userToken}\n                     setAuthUserName={setAuthUserName}\n                     setAuthUserEmail={setAuthUserEmail}\n                     handleNameChange={handleNameChange}\n                     handleEmailChange={handleEmailChange}\n                     handlePasswordChange={handlePasswordChange}/>} /> \n             <Route path=\"/account\" render={(props) => \n                 <Account \n                     {...props}\n                     authUserName={authUserName}\n                     authUserEmail={authUserEmail}\n                     userToken={userToken}\n                     authUserPassword={authUserPassword} \n                     authUserUpdateAt={authUserUpdateAt}\n                     showModal={showModal}\n                     showModalHandler={showModalHandler}\n                     hideModalHandler={hideModalHandler}\n                     readProfileHandler={readProfileHandler}/>} /> \n             <Redirect to=\"/\" />\n         </Switch>\n        )\n    }\n\n    // Returns the Toolbar and all route handlers for the application\n    return (\n        <div>\n        <Toolbar \n            isAuth={isAuth} \n            logoutUserHandler={logoutUserHandler} \n            readProfileHandler={readProfileHandler}\n            userToken={userToken}\n            {...props}/>\n            {routes}\n        </div>\n    )\n}\n\nexport default TaskManager\n","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom'\nimport './App.css';\nimport TaskManager from './containers/TaskManager'\n\n\nconst App = () => {\n\n  return (\n    <BrowserRouter>\n        <TaskManager />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab} from '@fortawesome/free-brands-svg-icons'\nimport {fas} from '@fortawesome/free-solid-svg-icons'\nimport './index.css';\nimport App from './App';\n\nlibrary.add(fab,fas)\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Application_Container__RXlPG\",\"Application\":\"Application_Application__3_UF2\",\"Task\":\"Application_Task__3_X3t\",\"Update\":\"Application_Update__1aaMo\",\"TaskHeader\":\"Application_TaskHeader__emxs-\",\"TopCorner\":\"Application_TopCorner__3cOQB\",\"Edit\":\"Application_Edit__3UTzo\",\"Trash\":\"Application_Trash__1ndUs\"};"],"sourceRoot":""}